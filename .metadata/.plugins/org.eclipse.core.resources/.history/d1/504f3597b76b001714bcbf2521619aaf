package com.zhilu.device.service;

import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Path;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import org.springframework.data.jpa.domain.Specification;

import com.zhilu.device.bean.TblIotDevice;

// 2.多表查询
/*
 * Join<Task,Project> join = root.join("project", JoinType.INNER);
 * Path<String> exp4 = join.get("projectName"); return cb.like(exp4,
 * "%projectName%");
 * 
 * Hibernate: select count(task0_.id) as col_0_0_ from tb_task
 * task0_ inner join tb_project project1_ on
 * task0_.project_id=project1_.id where project1_.project_name like
 * ?
 */
public class DevSpec {

	// 1.混合条件查询
	/*
	 * Path<String> exp1 = root.get("taskName"); Path<Date> exp2 =
	 * root.get("createTime"); Path<String> exp3 = root.get("taskDetail");
	 * Predicate predicate = cb.and(cb.like(exp1,
	 * "%taskName%"),cb.lessThan(exp2, new Date())); return
	 * cb.or(predicate,cb.equal(exp3, "kkk"));
	 * 
	 * 类似的sql语句为: Hibernate: select count(task0_.id) as col_0_0_ from tb_task
	 * task0_ where ( task0_.task_name like ? ) and task0_.create_time<? or
	 * task0_.task_detail=?
	 */
	public static Specification<TblIotDevice> method1() {

		return new Specification<TblIotDevice>() {
			@Override
			public Predicate toPredicate(Root<TblIotDevice> root, CriteriaQuery<?> query, CriteriaBuilder cb) {
				Path<String> exp1 = root.get("userid");
				Path<String> exp2 = root.get("type");
				Path<String> exp3 = root.get("search");
				Predicate predicate = cb.and(cb.like(exp1, "%userid%"), cb.lessThan(exp2, "xxxx"));
				// return cb.or(predicate,cb.equal(exp3, "kkk"));
				return predicate;
			}

		};
	}

	public static Specification<TblIotDevice> method2() {

		return new Specification<TblIotDevice>() {
			@Override
			public Predicate toPredicate(Root<TblIotDevice> root, CriteriaQuery<?> query, CriteriaBuilder cb) {
				return null;
			}

		};
	}

}