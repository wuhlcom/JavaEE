package com.zhilu.device.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.zhilu.device.bean.TblIotDevice;
import com.zhilu.device.repository.TblIotDeviceRepository;
import com.zhilu.device.util.ResultCode;
import com.zhilu.device.util.ResultMsg;
import com.zhilu.device.util.ResultStatusCode;
import com.zhilu.device.util.ResultStatusCode2;

@RestController
@RequestMapping("device")
public class TblIotDeviceController {

	@Autowired
	private TblIotDeviceRepository tblIotDeviceRepositoy;

	@GetMapping("query")
	public Object getDev(String id) {
		TblIotDevice tblIotDeviceEntity = tblIotDeviceRepositoy.findTblIotDeviceById(id);
		ResultMsg resultMsg = new ResultMsg(ResultStatusCode.OK.getErrcode(), getDevId(tblIotDeviceEntity));
		return resultMsg;
	}

	@GetMapping("getdevs")
	public Object getDevs(String name) {
		List<TblIotDevice> tblIotDeviceEntities = tblIotDeviceRepositoy.findTblIotDeviceByName(name);
		ResultMsg resultMsg = new ResultMsg(ResultStatusCode.OK.getErrcode(), ResultStatusCode.OK.getErrmsg(),
				tblIotDeviceEntities);
		return resultMsg;
	}

	@Modifying
	@PostMapping("add")
	public Object addDev(@RequestBody TblIotDevice tblIotDeviceEntity) {		
		if (paramJudge(tblIotDeviceEntity).isEmpty()) {
			tblIotDeviceRepositoy.save(tblIotDeviceEntity);
			ResultCode resultMsg = new ResultCode(ResultStatusCode.OK.getErrcode(), getDevId(tblIotDeviceEntity));
			return resultMsg;
		} else {
			return paramJudge(tblIotDeviceEntity);
		}
	}

	/**
	 * 判断参数是否传入
	 * @param tblIotDeviceEntity
	 * @return 
	 */
	private Map<Integer, String> paramJudge(TblIotDevice tblIotDeviceEntity) {
		String userid = tblIotDeviceEntity.getUserid();
		String name = tblIotDeviceEntity.getName();
		String product = tblIotDeviceEntity.getProduct();
		int protocol = tblIotDeviceEntity.getProtocol();
		String devices = tblIotDeviceEntity.getId();
		Map<Integer, String> map = new HashMap<Integer, String>();
		int code = 3002;
		String error;
		// List<String> list = new ArrayList<String>();
		// list.add("error");

		if (userid == null || userid.length() <= 0) {
			error = "userid error";
			map.put(code, error);
		} else if (name == null || name.length() <= 0) {
			error = "name error";
			map.put(code, error);
		} else if (product == null || product.length() <= 0) {
			error = "product error";
			map.put(code, error);
		} else if (protocol == 0 || protocol == 1 || protocol == 2 || protocol == 3) {
			error = "protocol error";
			map.put(code, error);
		} else if (devices == null || devices.length() <= 0) {
			error = "id error";
			map.put(code, error);
		}
		;
		return map;
	}

	/**
	 * @param tblIotDeviceEntity
	 *            返回设备Id
	 */
	private ArrayList getDevId(TblIotDevice tblIotDeviceEntity) {
		String devId = tblIotDeviceEntity.getId();
		ArrayList<String> listDevIds = new ArrayList<>();
		listDevIds.add(devId);
		return listDevIds;
	}

	@Modifying
	@RequestMapping("updatedev")
	public Object updateDev(@RequestBody TblIotDevice tblIotDeviceEntity) {
		TblIotDevice dev = tblIotDeviceRepositoy.findTblIotDeviceById(tblIotDeviceEntity.getId());
		if (dev != null) {
			dev.setName(tblIotDeviceEntity.getName());
			tblIotDeviceRepositoy.save(dev);
		}
		ResultMsg resultMsg = new ResultMsg(ResultStatusCode.OK.getErrcode(), ResultStatusCode.OK.getErrmsg(), null);
		return resultMsg;
	}

	@Modifying
	@RequestMapping("deletedev")
	public Object deleteDev(String id) {
		tblIotDeviceRepositoy.delete(id);
		ResultMsg resultMsg = new ResultMsg(ResultStatusCode.OK.getErrcode(), ResultStatusCode.OK.getErrmsg(), null);
		return resultMsg;
	}

}
