package com.zhilu.device.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.zhilu.device.bean.TblIotDevice;
import com.zhilu.device.repository.TblIotDeviceRepository;
import com.zhilu.device.util.ResultCode;
import com.zhilu.device.util.ResultMsg;
import com.zhilu.device.util.ResultStatusCode;
import com.zhilu.device.util.ResultStatusCode2;

@RestController
@RequestMapping("device")
public class TblIotDeviceController {

	@Autowired
	private TblIotDeviceRepository tblIotDeviceRepositoy;

	@RequestMapping("query")
	public Object getDev(String id) {
		TblIotDevice tblIotDeviceEntity = tblIotDeviceRepositoy.findTblIotDeviceById(id);			
		ResultMsg resultMsg = new ResultMsg(ResultStatusCode.OK.getErrcode(), getDevId(tblIotDeviceEntity));
		return resultMsg;
	}

	@RequestMapping("getdevs")
	public Object getDevs(String name) {
		List<TblIotDevice> tblIotDeviceEntities = tblIotDeviceRepositoy.findTblIotDeviceByName(name);
		ResultMsg resultMsg = new ResultMsg(ResultStatusCode.OK.getErrcode(), ResultStatusCode.OK.getErrmsg(),
				tblIotDeviceEntities);
		return resultMsg;
	}

	@Modifying
	@RequestMapping("add")
	public Object addDev(@RequestBody TblIotDevice tblIotDeviceEntity) {	
		tblIotDeviceRepositoy.save(tblIotDeviceEntity);				
		ResultCode resultMsg = new ResultCode(ResultStatusCode.OK.getErrcode(),getDevId(tblIotDeviceEntity));
		return resultMsg;
	}

	/**
	 * @param tblIotDeviceEntity
	 *  返回设备Id
	 */
	private ArrayList getDevId(TblIotDevice tblIotDeviceEntity) {
		String devId=tblIotDeviceEntity.getId();
		ArrayList<String> listDevIds=new ArrayList<>();
		listDevIds.add(devId);
		return listDevIds;
	}

	@Modifying
	@RequestMapping("updatedev")
	public Object updateDev(@RequestBody TblIotDevice tblIotDeviceEntity) {
		TblIotDevice dev = tblIotDeviceRepositoy.findTblIotDeviceById(tblIotDeviceEntity.getId());
		if (dev != null) {
			dev.setName(tblIotDeviceEntity.getName());
			tblIotDeviceRepositoy.save(dev);
		}
		ResultMsg resultMsg = new ResultMsg(ResultStatusCode.OK.getErrcode(), ResultStatusCode.OK.getErrmsg(), null);
		return resultMsg;
	}

	@Modifying
	@RequestMapping("deletedev")
	public Object deleteDev(String id) {
		tblIotDeviceRepositoy.delete(id);
		ResultMsg resultMsg = new ResultMsg(ResultStatusCode.OK.getErrcode(), ResultStatusCode.OK.getErrmsg(), null);
		return resultMsg;
	}

}
